---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates default user for AWS account
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: "User details"
        Parameters:
          - UserName
          - Password
    ParameterLabels: 
      UserName: 
        default: "Username"
      Password: 
        default: "Password"
Parameters:
    UserName:
      Type: String
      Description: The username of the user to be created.
    Password:
      Type: String
      Description: The password for the user. This should include at least one upper case letter and one number and should be at least 8 characters in length. 
Resources:
  Admin:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: Admin
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      - arn:aws:iam::aws:policy/IAMFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess 
  BatchSetup:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: BatchSetup
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      - arn:aws:iam::aws:policy/AWSBatchFullAccess 
      - arn:aws:iam::aws:policy/AmazonECS_FullAccess
  AWSCode:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: AWSCode
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
      - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
      - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
  Lambda:
    Type: AWS::IAM::Group
    Properties: 
      GroupName: Lambda
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AWSLambdaFullAccess
  S3role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:iam:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Ref": "UserName"
                    }
                  ]
                ]
                }
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: S3role
  DefaultUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${UserName}
      Path : "/"
      LoginProfile: 
        Password: !Sub ${Password}
      Groups: 
        - !Ref Admin
        - !Ref BatchSetup
        #- !Ref AWSCode
        - !Ref Lambda
  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref UserName
      #UserName: !GetAtt DefaultUser.UserName
    DependsOn: DefaultUser
Outputs:
  UserName:
    Value: !Ref UserName
  Password:
    Value: !Ref Password
  AccessKey:
    Value: !Ref AccessKey
  SecretKey:
    Value: !GetAtt AccessKey.SecretAccessKey
...
